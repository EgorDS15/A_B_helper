def mde(tab):
    tab.write("`MDE(минимальный детектируемый эффект) - размер эффекта, который можно обнаружить с заданными "
              "вероятностями ошибок, стандартными отклонениями и размером групп`")

    tab.markdown('<p>Конкретного алгоритма определения размера ожидаемого эффекта не существует, но есть '
                 'некоторые подходы, которые могут быть полезны:</p>', unsafe_allow_html=True)
    tab.markdown('<p>1. Оттолкнуться от минимального размера эффекта, который мы сможем распознать при тесте '
                 'на всех пользователях. Мы не сможем распознать эффект меньшего размера;</p>',
                 unsafe_allow_html=True)
    tab.markdown('<p>2. Использовать опыт прошедших тестов. Если ранее проводились похожие тесты, можем '
                 'использовать результаты их оценок для определения целевого эффекта;</p>',
                 unsafe_allow_html=True)
    tab.markdown('<p>3. Исходить из затрат на проведение теста. Например, нет смысла выбирать MDE меньше, '
                 'чем себестоимость эксперимента.</p>', unsafe_allow_html=True)

    n_mde = tab.text_input('Количество наблюдений в Контрольной группе')
    sd_frst_group = tab.text_input('Введите стандартное отклонение метрики ПЕРВОЙ группы по истории')
    sd_scnd_group = tab.text_input('Введите стандартное отклонение метрики метрики ВТОРОЙ группы по истории')
    alpha_mde = tab.text_input('Введите выбранный уровень значимости(alpha):')
    beta_mde = tab.text_input('Введите выбранную стат, мощность(beta):')

    if (n_mde is not None) & (sd_frst_group is not None) & (sd_scnd_group is not None) & (alpha_mde is not None) & (
            beta_mde is not None):
        res_mde = None
        tab.write(f"Минимальный детектируемый эффект: {res_mde}")
